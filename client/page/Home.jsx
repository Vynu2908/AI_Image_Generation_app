import React, { useEffect, useState } from 'react'
import { Loader, FormField, Card } from '../Components';

const RenderCards = ({data,title}) =>{
    if(data?.length>0)
    {
      return data.map((post) => <Card key = {post._id} {...post}/>)
    }
    return (
      <h2 className= 'mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
    )
  }
const Home = () => {
    const [loading, setLoading] = useState(false)
    const [allPosts, setAllposts] = useState(null)
    const [searchText,setSearchtext] = useState(' ')
    const [searchedResults,setSearchedResults] = useState(null)
    const [searchTimeout,setSeacrhTimeout] = useState(null)
    
useEffect(() =>{
  const fetchPosts = async ( ) =>{
  try{
    setLoading(true)
    const response = await fetch('http://localhost:8080/v1/api/posts',{
      method:'Get',
      headers:{
        'Content-type': 'application/json'
      }
    })
    if(response.ok){
      const result = await response.json();
      setAllposts(result.data.reverse());
    }
  }
  catch(error){
    alert(error)
  }
  finally{
    setLoading(false)
  }
}
fetchPosts();
},[])

const handleSearchtext = (e) =>{

  clearTimeout(searchTimeout);
   setSearchtext(e.target.value)
   setTimeout(
   setTimeout(() =>{
    const searchedResults = allPosts.filter((item)=>{item.name.toLowerCase().includes(searchText.toLowerCase())})
    setSearchedResults(searchedResults)
   },500)
   );
}
    return (
    <section className='max-w-7xl mx-auto'>
        <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
        </div>
        <div className='mt-16'>
          <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}/>
          </div>
        <div className='mt-10'>
            {loading?(<div className='flex justify-center items-center'><Loader/></div>):(
            <>
            {searchText && (
            <h2 className='font-medium text-[#666e75] text-xl mb-3'>Showing results for <span className='text-[#222328]'>{searchText}</span></h2>
            )}
            <div className=''>
                {searchText ?(
                    <RenderCards 
                    data={[searchedResults]}
                    title = "No Search results are found"
                    />
                ) : (
                    <RenderCards
                    data={[allPosts]}
                    title="No posts found"/>
                )
                }
            </div>
            </>
            )}
        </div>
    </section>
  )
}

export default Home;